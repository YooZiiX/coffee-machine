-------------------------------------------------------------------------------
Test set: fr.imt.mines.CoffeeMachineCucumberFunctionalTest
-------------------------------------------------------------------------------
Tests run: 5, Failures: 0, Errors: 5, Skipped: 0, Time elapsed: 0.576 s <<< FAILURE! - in fr.imt.mines.CoffeeMachineCucumberFunctionalTest
Make a coffee Functionality.Functional while plugged in  Time elapsed: 0.31 s  <<< ERROR!
io.cucumber.junit.UndefinedStepException: 
The step 'a Coffee Machine' and 2 other step(s) are undefined.
You can implement these steps using the snippet(s) below:

@Given("a Coffee Machine")
public void a_coffee_machine() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@When("I plug in the Coffee Machine")
public void i_plug_in_the_coffee_machine() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then("the Coffee Machine should be plugged in")
public void the_coffee_machine_should_be_plugged_in() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}


Make a coffee Functionality.Make Espresso in a Cup with Espresso Coffee Machine  Time elapsed: 0.016 s  <<< ERROR!
io.cucumber.junit.UndefinedStepException: 
The step 'an Espresso Coffee Machine' and 6 other step(s) are undefined.
You can implement these steps using the snippet(s) below:

@Given("an Espresso Coffee Machine")
public void an_espresso_coffee_machine() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Given("the Espresso Coffee Machine is plugged in")
public void the_espresso_coffee_machine_is_plugged_in() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Given("the Water Tank of the Espresso Coffee Machine has enough Water")
public void the_water_tank_of_the_espresso_coffee_machine_has_enough_water() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Given("the Bean Tank of the Espresso Coffee Machine has enough Beans")
public void the_bean_tank_of_the_espresso_coffee_machine_has_enough_beans() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Given("I put a Cup")
public void i_put_a_cup() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@When("I make an Espresso")
public void i_make_an_espresso() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then("I should have a Cup of Espresso")
public void i_should_have_a_cup_of_espresso() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}


Make a coffee Functionality.Make Coffee in a Mug with Coffee Machine  Time elapsed: 0.016 s  <<< ERROR!
io.cucumber.junit.UndefinedStepException: 
The step 'a Coffee Machine' and 6 other step(s) are undefined.
You can implement these steps using the snippet(s) below:

@Given("a Coffee Machine")
public void a_coffee_machine() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Given("the Coffee Machine is plugged in")
public void the_coffee_machine_is_plugged_in() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Given("the Water Tank of the Coffee Machine has enough Water")
public void the_water_tank_of_the_coffee_machine_has_enough_water() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Given("the Bean Tank of the Coffee Machine has enough Beans")
public void the_bean_tank_of_the_coffee_machine_has_enough_beans() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Given("I put a Mug")
public void i_put_a_mug() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@When("I make a Coffee")
public void i_make_a_coffee() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then("I should have a Mug of Coffee")
public void i_should_have_a_mug_of_coffee() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}


Make a coffee with a complete coffee machine.A user plug the coffee machine and make a coffee Arabica  Time elapsed: 0.047 s  <<< ERROR!
io.cucumber.junit.UndefinedStepException: 
The step 'a coffee machine with 0.10 l of min capacity, 3.0 l of max capacity, 600.0 l per h of water flow for the pump' and 8 other step(s) are undefined.
You can implement these steps using the snippet(s) below:

@Given("a coffee machine with {double} l of min capacity, {double} l of max capacity, {double} l per h of water flow for the pump")
public void a_coffee_machine_with_l_of_min_capacity_l_of_max_capacity_l_per_h_of_water_flow_for_the_pump(Double double1, Double double2, Double double3) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Given("a {string} with a capacity of {double}")
public void a_with_a_capacity_of(String string, Double double1) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@When("I plug the machine to electricity")
public void i_plug_the_machine_to_electricity() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@When("I add {int} liter of water in the water tank")
public void i_add_liter_of_water_in_the_water_tank(Integer int1) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@When("I add {double} liter of {string} in the bean tank")
public void i_add_liter_of_in_the_bean_tank(Double double1, String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@When("I made a coffee {string}")
public void i_made_a_coffee(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then("the coffee machine return a coffee mug not empty")
public void the_coffee_machine_return_a_coffee_mug_not_empty() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then("a coffee volume equals to {double}")
public void a_coffee_volume_equals_to(Double double1) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then("a coffee {string} containing a coffee type {string}")
public void a_coffee_containing_a_coffee_type(String string, String string2) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}


Make a coffee with a complete coffee machine.A user plug the coffee machine and make a coffee  Time elapsed: 0.025 s  <<< ERROR!
io.cucumber.junit.UndefinedStepException: 
The step 'a coffee machine with 0.10 l of min capacity, 3.0 l of max capacity, 600.0 l per h of water flow for the pump' and 8 other step(s) are undefined.
You can implement these steps using the snippet(s) below:

@Given("a coffee machine with {double} l of min capacity, {double} l of max capacity, {double} l per h of water flow for the pump")
public void a_coffee_machine_with_l_of_min_capacity_l_of_max_capacity_l_per_h_of_water_flow_for_the_pump(Double double1, Double double2, Double double3) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Given("a {string} with a capacity of {double}")
public void a_with_a_capacity_of(String string, Double double1) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@When("I plug the machine to electricity")
public void i_plug_the_machine_to_electricity() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@When("I add {int} liter of water in the water tank")
public void i_add_liter_of_water_in_the_water_tank(Integer int1) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@When("I add {double} liter of {string} in the bean tank")
public void i_add_liter_of_in_the_bean_tank(Double double1, String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@When("I made a coffee {string}")
public void i_made_a_coffee(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then("the coffee machine return a coffee mug not empty")
public void the_coffee_machine_return_a_coffee_mug_not_empty() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then("a coffee volume equals to {double}")
public void a_coffee_volume_equals_to(Double double1) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then("a coffee {string} containing a coffee type {string}")
public void a_coffee_containing_a_coffee_type(String string, String string2) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}


